/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package hr.algebra.view;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.Actor;
import hr.algebra.model.Director;
import hr.algebra.utilities.MessageUtils;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.text.JTextComponent;

/**
 *
 * @author antoanne
 */
public class CrudDialog extends javax.swing.JDialog {

    private Repository repository;

    private Actor actor;
    private Director director;
    private Map<JTextComponent, JLabel> validationMap = new LinkedHashMap<>();
    private List<Actor> actors;
    private List<Director> directors;

    /**
     * Creates new form CrudDialog
     */
    public CrudDialog(java.awt.Frame parent, boolean modal, Actor actor, Director director) {
        super(parent, modal);
        initComponents();
        init();
        this.actor = actor;
        this.director = director;
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTopicName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        btnConfirm = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTopicName.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        lblTopicName.setText("Add New Actor");

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(btnCancel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnConfirm)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 97, Short.MAX_VALUE)
                .addComponent(lblTopicName, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblTopicName)
                .addGap(52, 52, 52)
                .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirm)
                    .addComponent(btnCancel))
                .addGap(59, 59, 59))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        try {
            if (actor != null && actor.getActorName() != null) {
                boolean actorExists = checkActorDirectorExists(actor.getActorName(), "actor");
                if (!actorExists) {
                    createActorDirector("actor");
                }
            } else if (director != null && director.getDirectorName() != null) {
                boolean directorExists = checkActorDirectorExists(director.getDirectorName(), "director");
                if (!directorExists) {
                    createActorDirector("director");
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(CrudDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrudDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrudDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrudDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrudDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Actor actor = null;
                Director director = null;
                CrudDialog dialog = new CrudDialog(new javax.swing.JFrame(), true, actor, director);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JLabel lblTopicName;
    private javax.swing.JTextField tfName;
    // End of variables declaration//GEN-END:variables

    private void init() {
        try {
            initRepository();
            actors = repository.selectAllActors();
            directors = repository.selectAllDirectors();
            initActor();
        } catch (Exception ex) {
            Logger.getLogger(CrudDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean checkActorDirectorExists(String name, String entityType) {
        if (entityType.equals("actor")) {
            return actors.stream()
                    .anyMatch(actor -> actor.getActorName().equals(name));
        } else if (entityType.equals("director")) {
            // Assuming you have a list of directors named "directors"
            return directors.stream()
                    .anyMatch(director -> director.getDirectorName().equals(name));
        }
        return false;
    }

    
    private void createActorDirector(String entityType) {
        try {
            if (entityType.equals("actor")) {
                repository.createNewActor(tfName.getText().trim());
                MessageUtils.showInformationMessage("Create", "Sucessfull actor creation");
                dispose();
            } else if (entityType.equals("director")) {
                repository.createNewDirector(tfName.getText().trim());
                MessageUtils.showInformationMessage("Create", "Sucessfull director creation");
                dispose();
            }
        } catch (Exception ex) {
            Logger.getLogger(CrudDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void initActor() {

        lblTopicName.setText("Add New Person");
        tfName.setText("");
    }

    private void initRepository() {
        repository = RepositoryFactory.getRepository();
    }
}
